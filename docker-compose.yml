version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: vaulty
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: vaulty
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgresql/schemas/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "35432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U vaulty -d vaulty" ]
      interval: 10s
      timeout: 5s
      retries: 5

  vaulty_service:
    build:
      context: .
      dockerfile: Dockerfile
    image: vaulty_service
    container_name: vaulty_service
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_CONNECTION: postgres://vaulty:${POSTGRES_PASSWORD}@postgres:5432/vaulty
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      CRYPTO_AES_256_BASE64_KEY: ${CRYPTO_AES_256_BASE64_KEY}
    ports:
      - "8080:8080"

  telegram_bot:
    build:
      context: ./telegram
      dockerfile: Dockerfile
    image: vaulty_bot
    container_name: vaulty_bot
    environment:
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
    depends_on:
      - vaulty_service

volumes:
  postgres_data:
